import { NgModule, InjectionToken } from '@angular/core';
import { CommonModule } from '@angular/common';
import { defaults as defaultLocals } from './Locals';
import { NgxEditorComponent } from './editor.component';
import { NgxEditorServiceConfig } from './editor-config.service';
import { NgxEditorService, provideMyServiceOptions } from './editor.service';
import { MenuModule } from './modules/menu/menu.module';
import { MenuComponent } from './modules/menu/menu.component';
import { ImageViewComponent } from './components/image-view/image-view.component';
import { FloatingMenuComponent } from './modules/menu/floating-menu/floating-menu.component';
import * as i0 from "@angular/core";
export const NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');
const defaultConfig = {
    locals: defaultLocals,
};
export class NgxEditorModule {
    static forRoot(config = defaultConfig) {
        return {
            ngModule: NgxEditorModule,
            providers: [
                {
                    provide: NGX_EDITOR_CONFIG_TOKEN,
                    useValue: config,
                },
                {
                    provide: NgxEditorServiceConfig,
                    useFactory: provideMyServiceOptions,
                    deps: [NGX_EDITOR_CONFIG_TOKEN],
                },
            ],
        };
    }
    static forChild(config = defaultConfig) {
        return {
            ngModule: NgxEditorModule,
            providers: [
                {
                    provide: NGX_EDITOR_CONFIG_TOKEN,
                    useValue: config,
                },
                {
                    provide: NgxEditorServiceConfig,
                    useFactory: provideMyServiceOptions,
                    deps: [NGX_EDITOR_CONFIG_TOKEN],
                },
                NgxEditorService,
            ],
        };
    }
}
NgxEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: NgxEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgxEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: NgxEditorModule, declarations: [NgxEditorComponent,
        ImageViewComponent], imports: [CommonModule,
        MenuModule], exports: [NgxEditorComponent,
        MenuComponent,
        FloatingMenuComponent] });
NgxEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: NgxEditorModule, providers: [], imports: [[
            CommonModule,
            MenuModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: NgxEditorModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        MenuModule,
                    ],
                    providers: [],
                    declarations: [
                        NgxEditorComponent,
                        ImageViewComponent,
                    ],
                    exports: [
                        NgxEditorComponent,
                        MenuComponent,
                        FloatingMenuComponent,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdG9yLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1lZGl0b3Ivc3JjL2xpYi9lZGl0b3IubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHL0MsT0FBTyxFQUFFLFFBQVEsSUFBSSxhQUFhLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDakUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDN0UsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRXhELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNsRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQzs7QUFFN0YsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsSUFBSSxjQUFjLENBQWtCLGlCQUFpQixDQUFDLENBQUM7QUFFOUYsTUFBTSxhQUFhLEdBQW9CO0lBQ3JDLE1BQU0sRUFBRSxhQUFhO0NBQ3RCLENBQUM7QUFrQkYsTUFBTSxPQUFPLGVBQWU7SUFDMUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUEwQixhQUFhO1FBQ3BELE9BQU87WUFDTCxRQUFRLEVBQUUsZUFBZTtZQUN6QixTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLHVCQUF1QjtvQkFDaEMsUUFBUSxFQUFFLE1BQU07aUJBQ2pCO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxzQkFBc0I7b0JBQy9CLFVBQVUsRUFBRSx1QkFBdUI7b0JBQ25DLElBQUksRUFBRSxDQUFDLHVCQUF1QixDQUFDO2lCQUNoQzthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQTBCLGFBQWE7UUFDckQsT0FBTztZQUNMLFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsdUJBQXVCO29CQUNoQyxRQUFRLEVBQUUsTUFBTTtpQkFDakI7Z0JBQ0Q7b0JBQ0UsT0FBTyxFQUFFLHNCQUFzQjtvQkFDL0IsVUFBVSxFQUFFLHVCQUF1QjtvQkFDbkMsSUFBSSxFQUFFLENBQUMsdUJBQXVCLENBQUM7aUJBQ2hDO2dCQUNELGdCQUFnQjthQUNqQjtTQUNGLENBQUM7SUFDSixDQUFDOzs0R0FsQ1UsZUFBZTs2R0FBZixlQUFlLGlCQVR4QixrQkFBa0I7UUFDbEIsa0JBQWtCLGFBTmxCLFlBQVk7UUFDWixVQUFVLGFBUVYsa0JBQWtCO1FBQ2xCLGFBQWE7UUFDYixxQkFBcUI7NkdBR1osZUFBZSxhQVhmLEVBQUUsWUFKSjtZQUNQLFlBQVk7WUFDWixVQUFVO1NBQ1g7MkZBWVUsZUFBZTtrQkFoQjNCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osVUFBVTtxQkFDWDtvQkFDRCxTQUFTLEVBQUUsRUFBRTtvQkFDYixZQUFZLEVBQUU7d0JBQ1osa0JBQWtCO3dCQUNsQixrQkFBa0I7cUJBQ25CO29CQUNELE9BQU8sRUFBRTt3QkFDUCxrQkFBa0I7d0JBQ2xCLGFBQWE7d0JBQ2IscUJBQXFCO3FCQUN0QjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgTmd4RWRpdG9yQ29uZmlnIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgeyBkZWZhdWx0cyBhcyBkZWZhdWx0TG9jYWxzIH0gZnJvbSAnLi9Mb2NhbHMnO1xuXG5pbXBvcnQgeyBOZ3hFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL2VkaXRvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmd4RWRpdG9yU2VydmljZUNvbmZpZyB9IGZyb20gJy4vZWRpdG9yLWNvbmZpZy5zZXJ2aWNlJztcbmltcG9ydCB7IE5neEVkaXRvclNlcnZpY2UsIHByb3ZpZGVNeVNlcnZpY2VPcHRpb25zIH0gZnJvbSAnLi9lZGl0b3Iuc2VydmljZSc7XG5pbXBvcnQgeyBNZW51TW9kdWxlIH0gZnJvbSAnLi9tb2R1bGVzL21lbnUvbWVudS5tb2R1bGUnO1xuXG5pbXBvcnQgeyBNZW51Q29tcG9uZW50IH0gZnJvbSAnLi9tb2R1bGVzL21lbnUvbWVudS5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW1hZ2VWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ltYWdlLXZpZXcvaW1hZ2Utdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHsgRmxvYXRpbmdNZW51Q29tcG9uZW50IH0gZnJvbSAnLi9tb2R1bGVzL21lbnUvZmxvYXRpbmctbWVudS9mbG9hdGluZy1tZW51LmNvbXBvbmVudCc7XG5cbmV4cG9ydCBjb25zdCBOR1hfRURJVE9SX0NPTkZJR19UT0tFTiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxOZ3hFZGl0b3JDb25maWc+KCdOZ3hFZGl0b3JDb25maWcnKTtcblxuY29uc3QgZGVmYXVsdENvbmZpZzogTmd4RWRpdG9yQ29uZmlnID0ge1xuICBsb2NhbHM6IGRlZmF1bHRMb2NhbHMsXG59O1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIE1lbnVNb2R1bGUsXG4gIF0sXG4gIHByb3ZpZGVyczogW10sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE5neEVkaXRvckNvbXBvbmVudCxcbiAgICBJbWFnZVZpZXdDb21wb25lbnQsXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBOZ3hFZGl0b3JDb21wb25lbnQsXG4gICAgTWVudUNvbXBvbmVudCxcbiAgICBGbG9hdGluZ01lbnVDb21wb25lbnQsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE5neEVkaXRvck1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZzogTmd4RWRpdG9yQ29uZmlnID0gZGVmYXVsdENvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Tmd4RWRpdG9yTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ3hFZGl0b3JNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IE5HWF9FRElUT1JfQ09ORklHX1RPS0VOLFxuICAgICAgICAgIHVzZVZhbHVlOiBjb25maWcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBOZ3hFZGl0b3JTZXJ2aWNlQ29uZmlnLFxuICAgICAgICAgIHVzZUZhY3Rvcnk6IHByb3ZpZGVNeVNlcnZpY2VPcHRpb25zLFxuICAgICAgICAgIGRlcHM6IFtOR1hfRURJVE9SX0NPTkZJR19UT0tFTl0sXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgZm9yQ2hpbGQoY29uZmlnOiBOZ3hFZGl0b3JDb25maWcgPSBkZWZhdWx0Q29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hFZGl0b3JNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IE5neEVkaXRvck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogTkdYX0VESVRPUl9DT05GSUdfVE9LRU4sXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IE5neEVkaXRvclNlcnZpY2VDb25maWcsXG4gICAgICAgICAgdXNlRmFjdG9yeTogcHJvdmlkZU15U2VydmljZU9wdGlvbnMsXG4gICAgICAgICAgZGVwczogW05HWF9FRElUT1JfQ09ORklHX1RPS0VOXSxcbiAgICAgICAgfSxcbiAgICAgICAgTmd4RWRpdG9yU2VydmljZSxcbiAgICAgIF0sXG4gICAgfTtcbiAgfVxufVxuIl19