import { TextSelection } from 'prosemirror-state';
import { markApplies } from 'ngx-editor/helpers';
// Ref: https://github.com/ProseMirror/prosemirror-commands/blob/master/src/commands.js
export const applyMark = (type, attrs = {}) => {
    return (state, dispatch) => {
        const { tr, selection } = state;
        const { empty, ranges, $from, $to } = selection;
        if (empty && selection instanceof TextSelection) {
            const { $cursor } = selection;
            if (!$cursor || !markApplies(state.doc, ranges, type)) {
                return false;
            }
            tr.addStoredMark(type.create(attrs));
            if (!tr.storedMarksSet) {
                return false;
            }
            dispatch === null || dispatch === void 0 ? void 0 : dispatch(tr);
        }
        else {
            tr.addMark($from.pos, $to.pos, type.create(attrs));
            if (!tr.docChanged) {
                return false;
            }
            dispatch === null || dispatch === void 0 ? void 0 : dispatch(tr.scrollIntoView());
        }
        return true;
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbHlNYXJrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWVkaXRvci9jb21tYW5kcy9hcHBseU1hcmsudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFlLGFBQWEsRUFBZSxNQUFNLG1CQUFtQixDQUFDO0FBRTVFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVqRCx1RkFBdUY7QUFDdkYsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQUMsSUFBYyxFQUFFLFFBQTZCLEVBQUUsRUFBVyxFQUFFO0lBQ3BGLE9BQU8sQ0FBQyxLQUFrQixFQUFFLFFBQW9DLEVBQVcsRUFBRTtRQUMzRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxHQUFHLEtBQUssQ0FBQztRQUNoQyxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUcsU0FBUyxDQUFDO1FBRWhELElBQUksS0FBSyxJQUFJLFNBQVMsWUFBWSxhQUFhLEVBQUU7WUFDL0MsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLFNBQVMsQ0FBQztZQUU5QixJQUFJLENBQUMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxFQUFFO2dCQUNyRCxPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsRUFBRSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxjQUFjLEVBQUU7Z0JBQ3RCLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFFRCxRQUFRLGFBQVIsUUFBUSx1QkFBUixRQUFRLENBQUcsRUFBRSxDQUFDLENBQUM7U0FDaEI7YUFBTTtZQUNMLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUVuRCxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRTtnQkFDbEIsT0FBTyxLQUFLLENBQUM7YUFDZDtZQUVELFFBQVEsYUFBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRyxFQUFFLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztTQUNqQztRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWFya1R5cGUgfSBmcm9tICdwcm9zZW1pcnJvci1tb2RlbCc7XG5pbXBvcnQgeyBDb21tYW5kIH0gZnJvbSAncHJvc2VtaXJyb3ItY29tbWFuZHMnO1xuaW1wb3J0IHsgRWRpdG9yU3RhdGUsIFRleHRTZWxlY3Rpb24sIFRyYW5zYWN0aW9uIH0gZnJvbSAncHJvc2VtaXJyb3Itc3RhdGUnO1xuXG5pbXBvcnQgeyBtYXJrQXBwbGllcyB9IGZyb20gJ25neC1lZGl0b3IvaGVscGVycyc7XG5cbi8vIFJlZjogaHR0cHM6Ly9naXRodWIuY29tL1Byb3NlTWlycm9yL3Byb3NlbWlycm9yLWNvbW1hbmRzL2Jsb2IvbWFzdGVyL3NyYy9jb21tYW5kcy5qc1xuZXhwb3J0IGNvbnN0IGFwcGx5TWFyayA9ICh0eXBlOiBNYXJrVHlwZSwgYXR0cnM6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fSk6IENvbW1hbmQgPT4ge1xuICByZXR1cm4gKHN0YXRlOiBFZGl0b3JTdGF0ZSwgZGlzcGF0Y2g/OiAodHI6IFRyYW5zYWN0aW9uKSA9PiB2b2lkKTogYm9vbGVhbiA9PiB7XG4gICAgY29uc3QgeyB0ciwgc2VsZWN0aW9uIH0gPSBzdGF0ZTtcbiAgICBjb25zdCB7IGVtcHR5LCByYW5nZXMsICRmcm9tLCAkdG8gfSA9IHNlbGVjdGlvbjtcblxuICAgIGlmIChlbXB0eSAmJiBzZWxlY3Rpb24gaW5zdGFuY2VvZiBUZXh0U2VsZWN0aW9uKSB7XG4gICAgICBjb25zdCB7ICRjdXJzb3IgfSA9IHNlbGVjdGlvbjtcblxuICAgICAgaWYgKCEkY3Vyc29yIHx8ICFtYXJrQXBwbGllcyhzdGF0ZS5kb2MsIHJhbmdlcywgdHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICB0ci5hZGRTdG9yZWRNYXJrKHR5cGUuY3JlYXRlKGF0dHJzKSk7XG4gICAgICBpZiAoIXRyLnN0b3JlZE1hcmtzU2V0KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgZGlzcGF0Y2g/Lih0cik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyLmFkZE1hcmsoJGZyb20ucG9zLCAkdG8ucG9zLCB0eXBlLmNyZWF0ZShhdHRycykpO1xuXG4gICAgICBpZiAoIXRyLmRvY0NoYW5nZWQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBkaXNwYXRjaD8uKHRyLnNjcm9sbEludG9WaWV3KCkpO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9O1xufTtcbiJdfQ==